// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=feedback, out=o1); // keep current value(feedback)
    Mux16(a=feedback, b=o1, sel=inc, out=o2); // inc if requested (lowest priority)
    Mux16(a=o2, b=in, sel=load, out=o3); // new load if requested (medium priority)
    Mux16(a=o3, b=false, sel=reset, out=o4); // reset if requested (highest priority)
    // Update the register if anything changed, maybe it's overkill and we could just always write (load=true) ?
    Or(a=reset, b=load, out=or1);
    Or(a=or1, b=inc, out=changed);
    Register(in=o4, load=changed, out=out, out=feedback);
}
